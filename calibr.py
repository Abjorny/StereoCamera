import os
import cv2
import numpy as np
from stereovision.calibration import StereoCalibrator, StereoCalibration
from stereovision.exceptions import ChessboardNotFoundError

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
rows = 6                  # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ (–≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —É–≥–ª—ã)
columns = 9               # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–æ–ª–±—Ü–æ–≤ (–≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —É–≥–ª—ã)
square_size = 2.5       # —Ä–∞–∑–º–µ—Ä –∫–ª–µ—Ç–∫–∏ (—Å–º –∏–ª–∏ –º–º)
total_photos = 30      # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ä –¥–ª—è –∫–∞–ª–∏–±—Ä–æ–≤–∫–∏
image_size = (640, 280)   # —Ä–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (–µ—Å–ª–∏ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω)

# === –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ ===
image_folder = os.path.join(os.path.dirname(__file__), 'calibration_images')
print("üìÅ –¢–µ–∫—É—â–∞—è —Ä–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è:", os.getcwd())
print("üì∑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–∫–∏ calibration_images:", os.listdir(image_folder))

# === –ö–ª–∞—Å—Å –∫–∞–ª–∏–±—Ä–∞—Ç–æ—Ä–∞ ===
calibrator = StereoCalibrator(rows, columns, square_size, image_size)

print('üîÑ –ù–∞—á–∞–ª–æ —Ü–∏–∫–ª–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...')
photo_counter = 0
successful = 0

while photo_counter < total_photos:
    photo_counter += 1
    left_path = os.path.join(image_folder, f'left_{photo_counter}.png')
    right_path = os.path.join(image_folder, f'right_{photo_counter}.png')

    if not (os.path.isfile(left_path) and os.path.isfile(right_path)):
        print(f"‚ö†Ô∏è –ü–∞—Ä–∞ {photo_counter} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –ø—Ä–æ–ø—É—Å–∫...")
        continue

    print(f"‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –ø–∞—Ä—ã ‚Ññ{photo_counter}:")
    print(f"    {left_path}")
    print(f"    {right_path}")

    imgL = cv2.imread(left_path, 1)
    imgR = cv2.imread(right_path, 1)

    if imgL is None or imgR is None:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –ø–∞—Ä–µ ‚Ññ{photo_counter}, –ø—Ä–æ–ø—É—Å–∫")
        continue

    if imgL.shape != imgR.shape:
        imgR = cv2.resize(imgR, (imgL.shape[1], imgL.shape[0]))

    try:
        calibrator.add_corners((imgL, imgR))
        successful += 1
    except ChessboardNotFoundError:
        print(f"‚ùå –®–∞—Ö–º–∞—Ç–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –ø–∞—Ä–µ ‚Ññ{photo_counter}, –ø—Ä–æ–ø—É—Å–∫")


cv2.destroyAllWindows()
print(f"‚úÖ –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à—ë–Ω! –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–∞—Ä: {successful}/{total_photos}")

if successful < 3:
    print("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–∞–ª–∏–±—Ä–æ–≤–∫–∏. –ù—É–∂–Ω–æ —Ö–æ—Ç—è –±—ã 3 –ø–∞—Ä—ã.")
    exit()

# === –ö–∞–ª–∏–±—Ä–æ–≤–∫–∞ –∫–∞–º–µ—Ä ===
print("‚öôÔ∏è –ö–∞–ª–∏–±—Ä–æ–≤–∫–∞ –∫–∞–º–µ—Ä... –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç.")
calibration = calibrator.calibrate_cameras()
calibration.export('stereo_calibration_result')
print("‚úÖ –ö–∞–ª–∏–±—Ä–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–ø–∫–µ stereo_calibration_result")

# === –ü—Ä–∏–º–µ—Ä —Ä–µ–∫—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø–∞—Ä—ã ===
print("üìê –ü—Ä–∏–º–µ—Ä —Ä–µ–∫—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø–∞—Ä—ã...")
calibration = StereoCalibration(input_folder='stereo_calibration_result')
rectified_pair = calibration.rectify((imgL, imgR))

cv2.imshow('Left Rectified', rectified_pair[0])
cv2.imshow('Right Rectified', rectified_pair[1])
cv2.imwrite("rectified_left.png", rectified_pair[0])
cv2.imwrite("rectified_right.png", rectified_pair[1])
cv2.waitKey(0)
cv2.destroyAllWindows()
